"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[5384,7345],{"./src/stories/projects/lettz/components/ConversationItem.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LongMessage:()=>LongMessage,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),liamc9npm__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/liamc9npm/dist/index.es.js"),react_router_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-router-dom/dist/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Projects/Lettz/Components/ConversationItem",tags:["autodocs"],component:liamc9npm__WEBPACK_IMPORTED_MODULE_1__.TJX,tags:["autodocs"],parameters:{docs:{description:{component:'\n\nThe `ConversationItem` component is a reusable component for displaying a single conversation in a chat application. It includes the avatar, name, last message, and timestamp of the conversation.\n\n### Features\n- **Participant Avatar and Name**: Shows the other participant\'s name and profile picture.\n- **Last Message Preview**: Displays the last message with an ellipsis if too long.\n- **Timestamp Formatting**: Converts Firestore timestamps to a readable format like "Today" or "3 days ago".\n\n### Usage\n\n```jsx\nimport React from "react";\nimport ConversationItem from "../components/ConversationItem";\n\nconst ExampleComponent = () => {\n  const conversation = {\n    id: "12345",\n    participants: [\n      { uid: "user1", name: "Alice", avatarUrl: "https://via.placeholder.com/50" },\n      { uid: "user2", name: "Bob", avatarUrl: "https://via.placeholder.com/50" },\n    ],\n    lastMessage: {\n      text: "Hey! How are you doing?",\n      timestamp: new Date(),\n    },\n  };\n\n  const currentUser = { uid: "user1" };\n\n  return <ConversationItem conversation={conversation} currentUser={currentUser} />;\n};\n\nexport default ExampleComponent;\n```\n\n### Props\n- **conversation**: Object containing the conversation data:\n  - **id**: Unique ID of the conversation.\n  - **participants**: Array of participants in the conversation (each with uid, name, and avatarUrl).\n  - **lastMessage**: Object with text (last message content) and timestamp (Date or Firestore Timestamp).\n- **currentUser**: The currently authenticated user object to determine which participant to display.\n        '}}},argTypes:{conversation:{control:"object"},currentUser:{control:"object"}}},Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.Kd,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(liamc9npm__WEBPACK_IMPORTED_MODULE_1__.TJX,args),"   "),Default=Template.bind({});Default.args={conversation:{id:"12345",participants:[{uid:"user1",name:"Alice",avatarUrl:"https://via.placeholder.com/50"},{uid:"user2",name:"Bob",avatarUrl:"https://via.placeholder.com/50"}],lastMessage:{text:"Hey! How are you doing?",timestamp:new Date}},currentUser:{uid:"user1"}};const LongMessage=Template.bind({});LongMessage.args={conversation:{id:"67890",participants:[{uid:"user1",name:"Charlie",avatarUrl:"https://via.placeholder.com/50"},{uid:"user2",name:"Daisy",avatarUrl:"https://via.placeholder.com/50"}],lastMessage:{text:"This is a really long message that will get truncated to fit within the component's view.",timestamp:new Date}},currentUser:{uid:"user1"}};const __namedExportsOrder=["Default","LongMessage"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Router>\r\n  <ConversationItem {...args} />   </Router>",...Default.parameters?.docs?.source}}},LongMessage.parameters={...LongMessage.parameters,docs:{...LongMessage.parameters?.docs,source:{originalSource:"args => <Router>\r\n  <ConversationItem {...args} />   </Router>",...LongMessage.parameters?.docs?.source}}}}}]);