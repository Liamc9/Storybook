"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8840],{"./src/stories/navigation/TabGroup.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TabGroup_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const Container=styled_components_browser_esm.Ay.div`
  position: relative;
  display: flex;
  width: 100%;
  border-bottom: 1px solid #ccc;
`,Button=styled_components_browser_esm.Ay.button`
  flex: 1;
  padding: 1rem;
  border: none;
  outline: none;
  cursor: pointer;
  background: transparent;
  font-size: 1rem;
  color: ${_ref=>{let{isActive,activeColor}=_ref;return isActive?activeColor:"inherit"}};

`,Underline=styled_components_browser_esm.Ay.div`
  position: absolute;
  bottom: 0;
  height: 2px;
  transition: transform 0.3s ease, width 0.3s ease;
`,TabGroup=_ref2=>{let{tabs,activeColor,activeIndex:controlledIndex,onTabChange}=_ref2;const isControlled=void 0!==controlledIndex&&"function"==typeof onTabChange,[internalIndex,setInternalIndex]=(0,react.useState)(0),activeIndex=isControlled?controlledIndex:internalIndex,tabContainerRef=(0,react.useRef)(null),[underlineStyle,setUnderlineStyle]=(0,react.useState)({});(0,react.useEffect)((()=>{if(tabContainerRef.current){const tabWidth=tabContainerRef.current.offsetWidth/tabs.length;setUnderlineStyle({width:`${tabWidth}px`,transform:`translateX(${activeIndex*tabWidth}px)`})}}),[activeIndex,tabs.length]);return react.createElement(Container,{ref:tabContainerRef},tabs.map(((tabName,index)=>react.createElement(Button,{key:tabName,isActive:activeIndex===index,activeColor,onClick:()=>(index=>{isControlled?onTabChange(index):(setInternalIndex(index),onTabChange&&onTabChange(index))})(index)},tabName))),react.createElement(Underline,{style:{...underlineStyle,backgroundColor:activeColor}}))};TabGroup.defaultProps={activeColor:"#007bff",activeIndex:void 0,onTabChange:void 0};const navigation_TabGroup=TabGroup,TabGroup_stories={title:"Navigation/Tabs/TabGroup",component:navigation_TabGroup,tags:["autodocs"],parameters:{docs:{description:{component:"\n### TabGroup Component (Controlled)\n\n`TabGroup` can be used in a controlled manner by supplying `activeIndex` and `onTabChange` props.\n\n**Props:**\n- `tabs` (required): Array of strings representing tab names.\n- `activeColor` (optional): Color for the active tab text and underline. Defaults to `#007bff`.\n- `activeIndex` (optional): Currently active tab index for controlled usage.\n- `onTabChange` (optional): Callback when a tab is clicked. Should update the `activeIndex` in the parent.\n\n**Usage:**\n\n```jsx\nconst ParentComponent = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const tabs = ['Home', 'Profile', 'Settings'];\n\n    return (\n    <div>\n      <TabGroup\n        tabs={tabs}\n        activeColor=\"#FF5733\"\n         onTabChange={setActiveIndex}\n      />\n      <div >\n        {activeTab === 0 && <div>Content for Home</div>}\n        {activeTab === 1 && <div>Content for Profile</div>}\n        {activeTab === 2 && <div>Content for Settings</div>}\n      </div>\n    </div>\n  );\n};\n```\n        "}}}},Controlled=(args=>{const{tabs,activeColor}=args,[activeIndex,setActiveIndex]=(0,react.useState)(0);return react.createElement(react.Fragment,null,react.createElement(navigation_TabGroup,{tabs,activeColor,activeIndex,onTabChange:setActiveIndex}),react.createElement("div",{style:{padding:"1rem"}},0===activeIndex&&react.createElement("div",null,"Content for Tab One"),1===activeIndex&&react.createElement("div",null,"Content for Tab Two"),2===activeIndex&&react.createElement("div",null,"Content for Tab Three")))}).bind({});Controlled.args={tabs:["Tab One","Tab Two","Tab Three"],activeColor:"#FF5733"};const __namedExportsOrder=["Controlled"];Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"args => {\n  const {\n    tabs,\n    activeColor\n  } = args;\n  const [activeIndex, setActiveIndex] = useState(0);\n  return <>\r\n      <TabGroup tabs={tabs} activeColor={activeColor} activeIndex={activeIndex} onTabChange={setActiveIndex} />\r\n      <div style={{\n      padding: '1rem'\n    }}>\r\n        {activeIndex === 0 && <div>Content for Tab One</div>}\r\n        {activeIndex === 1 && <div>Content for Tab Two</div>}\r\n        {activeIndex === 2 && <div>Content for Tab Three</div>}\r\n      </div>\r\n    </>;\n}",...Controlled.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=stories-navigation-TabGroup-stories.a20152b9.iframe.bundle.js.map