{"version":3,"file":"stories-molecules-navigation-BottomNav2-stories.85574189.iframe.bundle.js","mappings":";;;;;;;;;;;;AAkBA;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;;;;;;;;;;;;AAeA;;;;;;;;;;AA+EA","sources":["webpack://storybook/./src/components/molecules/navigation/BottomNav2.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst MenuContainer = styled.div`\r\n  --duration: 0.45s;\r\n  --cubic: cubic-bezier(0.4, 0, 0.2, 1);\r\n  --color-1: #d5dadd;\r\n  --color-2: #b99976;\r\n\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff; /* Optional: Change background color to fit the design */\r\n  z-index: 1000; /* Ensures it's above other content */\r\n`;\r\n\r\nconst Menu = styled.menu`\r\n  margin: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  height: 7rem;\r\n  user-select: none;\r\n  position: relative;\r\n  align-items: center;\r\n  padding: 0 1.9em 2em;\r\n  justify-content: center;\r\n  max-width: 100%; /* Ensures it doesn't overflow */\r\n  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1); /* Optional: Adds a shadow at the top */\r\n`;\r\n\r\nconst MenuItem = styled.button`\r\n  all: unset;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  padding-top: 0.5em;\r\n  position: relative;\r\n  align-items: center;\r\n  color: var(--color-1);\r\n  justify-content: center;\r\n  transition: flex-grow var(--duration) var(--cubic);\r\n\r\n  &.active {\r\n    flex-grow: 2.7;\r\n    color: var(--color-2);\r\n  }\r\n\r\n  &::after {\r\n    left: 0;\r\n    bottom: 0;\r\n    content: \" \";\r\n    height: 0.25em;\r\n    position: absolute;\r\n    border-radius: 2em;\r\n    transform-origin: left center;\r\n    background-color: currentColor;\r\n    width: calc(var(--lineWidth) + 5px);\r\n    transform: translate3d(3em, 0, 0) scaleX(0);\r\n    transition: transform calc(var(--duration) + 0.2s) var(--cubic);\r\n  }\r\n\r\n  &.active::after {\r\n    transform: translate3d(6.3em, 0, 0) scaleX(1);\r\n    transition: transform var(--duration) var(--cubic);\r\n  }\r\n  &.active::before {\r\n  transform: scale(1);\r\n}\r\n\r\n  &.active .menu__icon {\r\n    transform: translate3d(-95%, 0, 0);\r\n  }\r\n`;\r\n\r\nconst MenuText = styled.strong`\r\n  left: 4.15em;\r\n  font-size: 1.5em;\r\n  position: absolute;\r\n  text-transform: capitalize;\r\n  letter-spacing: 0.01em;\r\n  transform: translate3d(0, 109%, 0);\r\n  transition: transform calc(var(--duration) / 3.7);\r\n\r\n&.active {\r\n  transform: translate3d(0, 0, 0);\r\n  transition: transform calc(var(--duration) / 1.5);\r\n}\r\n`\r\n\r\nconst Icon = styled.div`\r\n  font-size: 1.05em;\r\n  stroke: currentColor;\r\n  transition: transform var(--duration) var(--cubic);\r\n  fill: none;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  display: block;\r\n  stroke-width: 15;\r\n  stroke-miterlimit: 10;\r\n`;\r\n\r\nconst BottomNav2 = ({ items }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const textRefs = useRef([]);\r\n  const [lineWidths, setLineWidths] = useState([]);\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    const updateLineWidths = () => {\r\n      const widths = textRefs.current.map((text) => (text ? text.offsetWidth : 0));\r\n      setLineWidths(widths);\r\n    };\r\n\r\n    updateLineWidths();\r\n    window.addEventListener('resize', updateLineWidths);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateLineWidths);\r\n    };\r\n  }, [items]);\r\n\r\n  const handleClick = (index) => {\r\n    if (index === activeIndex) return;\r\n    setActiveIndex(index);\r\n    if (items[index].path) {\r\n      navigate(items[index].path); // Navigate to the specified path\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <MenuContainer>\r\n      <Menu>\r\n        {items.map((item, index) => (\r\n          <MenuItem\r\n          key={index}\r\n          className={activeIndex === index ? 'active' : ''}\r\n          onClick={() => handleClick(index)}\r\n          style={{ '--lineWidth': `${lineWidths[index] || 0}px` }}\r\n        >\r\n             <Icon className=\"menu__icon\">\r\n              {React.cloneElement(item.icon, {\r\n                className: `${item.icon.props.className || ''} ${\r\n                  activeIndex === index ? 'active' : ''\r\n                }`,\r\n              })}\r\n            </Icon>\r\n            <MenuText\r\n              className={activeIndex === index ? 'active' : ''}\r\n              ref={(el) => (textRefs.current[index] = el)}\r\n            >\r\n              {item.text}\r\n            </MenuText>\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n      </MenuContainer>\r\n\r\n\r\n\r\n      {/* CSS Styles */}\r\n      <style>{`\r\n        .icon {\r\n          width: 2.5em;\r\n          height: 2.5em;\r\n        }\r\n      `}</style>\r\n    </>\r\n);\r\n};\r\n\r\nexport default BottomNav2;\r\n"],"names":[],"sourceRoot":""}