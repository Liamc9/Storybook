{"version":3,"file":"stories-search-Search-stories.89cc2355.iframe.bundle.js","mappings":";;;;AAUA;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;AAgBA;;;;;;;;AAqBA","sources":["webpack://storybook/./src/components/search/Search.jsx"],"sourcesContent":["// Search.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useFuzzySearch } from './SearchLogic';\r\n\r\n// Styled components\r\nconst SearchContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  font-family: Arial, sans-serif;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  box-sizing: border-box;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: #007bff;\r\n    box-shadow: 0 0 4px rgba(0, 123, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin-left: 8px;\r\n  padding: 10px 16px;\r\n  border: none;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #004085;\r\n  }\r\n`;\r\n\r\nconst SuggestionsList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  position: absolute;\r\n  top: 44px;\r\n  width: 100%;\r\n  z-index: 10;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SuggestionItem = styled.li`\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n`;\r\n\r\nconst Search = ({ onSearch, items, placeholder }) => {\r\n  const { query, setQuery, suggestions } = useFuzzySearch(items, { keys: ['title'] });\r\n\r\n  const handleInputChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    // Use the query from hook state when searching\r\n    onSearch(query);\r\n  };\r\n\r\n  return (\r\n    <SearchContainer>\r\n      <SearchInput\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={handleInputChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <SearchButton onClick={handleSearchClick}>Search</SearchButton>\r\n      {suggestions.length > 0 && (\r\n        <SuggestionsList>\r\n          {suggestions.map((item, index) => (\r\n            <SuggestionItem key={index}>{item.title}</SuggestionItem>\r\n          ))}\r\n        </SuggestionsList>\r\n      )}\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"names":[],"sourceRoot":""}