"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[3186],{"./src/stories/atoms/popovers/Popover.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Popover_stories});var react=__webpack_require__("./node_modules/react/index.js");const popovers_Popover=_ref=>{let{trigger,children}=_ref;const[isOpen,setIsOpen]=(0,react.useState)(!1),popoverRef=(0,react.useRef)(),triggerRef=(0,react.useRef)();return(0,react.useEffect)((()=>{const handleClickOutside=event=>{popoverRef.current&&!popoverRef.current.contains(event.target)&&triggerRef.current&&!triggerRef.current.contains(event.target)&&setIsOpen(!1)};return document.addEventListener("mousedown",handleClickOutside),()=>{document.removeEventListener("mousedown",handleClickOutside)}}),[]),react.createElement("div",{className:"relative inline-block"},react.createElement("div",{ref:triggerRef,onClick:()=>{setIsOpen(!isOpen)},className:"cursor-pointer inline-flex items-center"},trigger),isOpen&&react.createElement("div",{ref:popoverRef,className:"absolute left-1/2 transform -translate-x-1/2 mt-2 w-48 bg-white rounded-md shadow-lg py-2 z-50"},children))},Popover_stories={title:"Atoms/Popovers/Popover",component:popovers_Popover,tags:["autodocs"],parameters:{docs:{description:{component:"\nThe `Popover` component displays additional content or options in a small overlay that appears when an associated element is triggered. This component is useful for showing contextual information or interactive elements without navigating away from the current page.\n\n### Features\n- **Trigger Element**: Can be activated by any component (e.g., button, icon).\n- **Customizable Content**: Supports various types of content within the popover.\n- **Positioning**: Automatically positions relative to the trigger element.\n\n### Usage\n\n```jsx\nimport React from 'react';\nimport Popover from './components/Popover';\n\nconst ExampleComponent = () => (\n  <div style={{ padding: '100px' }}>\n    <Popover\n      trigger={<button className=\"px-4 py-2 bg-blue-500 text-white rounded\">Click Me</button>}\n    >\n      <div className=\"p-4\">\n        <p>This is the popover content.</p>\n      </div>\n    </Popover>\n  </div>\n);\n\nexport default ExampleComponent;\n```\n        "}}}},Default=()=>react.createElement("div",{style:{padding:"100px"}},react.createElement(popovers_Popover,{trigger:react.createElement("button",{className:"px-4 py-2 bg-blue-500 text-white rounded"},"Click Me")},react.createElement("div",{className:"p-4"},react.createElement("p",null,"This is the popover content.")))),__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => <div style={{\n  padding: \'100px\'\n}}>\r\n    <Popover trigger={<button className="px-4 py-2 bg-blue-500 text-white rounded">Click Me</button>}>\r\n      <div className="p-4">\r\n        <p>This is the popover content.</p>\r\n      </div>\r\n    </Popover>\r\n  </div>',...Default.parameters?.docs?.source}}}}}]);