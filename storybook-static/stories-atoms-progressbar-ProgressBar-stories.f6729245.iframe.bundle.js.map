{"version":3,"file":"stories-atoms-progressbar-ProgressBar-stories.f6729245.iframe.bundle.js","mappings":";;;;;;AAqBA;;;;;AChBA","sources":["webpack://storybook/./src/components/atoms/other/ProgressBar.jsx","webpack://storybook/./src/stories/atoms/progressbar/ProgressBar.stories.js"],"sourcesContent":["// ProgressBar.js\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProgressBar = ({ currentPage, totalPages }) => {\r\n  const progress = (currentPage / totalPages) * 100;\r\n  return (\r\n    <ProgressBarContainer>\r\n      <ProgressIndicator style={{ width: `${progress}%` }} />\r\n    </ProgressBarContainer>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  width: 100%;\r\n  background-color: #e0e0e0;\r\n  height: 8px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ProgressIndicator = styled.div`\r\n  height: 100%;\r\n  background-color: #b08b5b;\r\n  border-radius: 5px;\r\n  transition: width 0.3s;\r\n`;\r\n","// src/stories/ProgressBar.stories.js\r\n\r\nimport React from 'react';\r\nimport ProgressBar from '../../../components/atoms/other/ProgressBar';\r\n\r\nexport default {\r\n  title: 'Atoms/ProgressBar',\r\n  component: ProgressBar,\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\nThe \\`ProgressBar\\` component visually represents the progress of a task or process. It is useful for showing users how much of a process is completed and how much is remaining, providing better user experience and guidance.\r\n\r\n### Features\r\n- **Dynamic Progress**: Adjusts based on the current and total number of pages or steps.\r\n- **Customizable**: Can be used in various contexts such as wizards, forms, or any multi-step processes.\r\n- **Responsive**: Designed to fit seamlessly into different parts of an application.\r\n\r\n### Usage\r\n\r\n\\`\\`\\`jsx\r\nimport React from 'react';\r\nimport ProgressBar from './components/ProgressBar';\r\n\r\nconst ExampleComponent = () => (\r\n  <ProgressBar currentPage={3} totalPages={6} />\r\n);\r\n\r\nexport default ExampleComponent;\r\n\\`\\`\\`\r\n        `,\r\n      },\r\n    },\r\n  },\r\n  argTypes: {\r\n    currentPage: { control: { type: 'number', min: 0 }, description: 'The current step or page number in the progress.' },\r\n    totalPages: { control: { type: 'number', min: 1 }, description: 'The total number of steps or pages.' },\r\n  },\r\n};\r\n\r\nconst Template = (args) => <ProgressBar {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  currentPage: 1,\r\n  totalPages: 5,\r\n};\r\n\r\nexport const Halfway = Template.bind({});\r\nHalfway.args = {\r\n  currentPage: 3,\r\n  totalPages: 6,\r\n};\r\n\r\nexport const Complete = Template.bind({});\r\nComplete.args = {\r\n  currentPage: 5,\r\n  totalPages: 5,\r\n};\r\n"],"names":[],"sourceRoot":""}