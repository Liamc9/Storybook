"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[569,5384],{"./src/stories/projects/disdat/components/PollItem.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LongTexts:()=>LongTexts,MultipleInstances:()=>MultipleInstances,PercentagesNotAddingUp:()=>PercentagesNotAddingUp,WithPreSelectedOption:()=>WithPreSelectedOption,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),liamc9npm__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/liamc9npm/dist/index.es.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Projects/DisDat/Components/PollItem",component:liamc9npm__WEBPACK_IMPORTED_MODULE_1__.D0$,tags:["autodocs"],parameters:{docs:{description:{component:'\n**PollItem** is a versatile React component designed to display a question with two selectable options. Upon selection, it showcases the distribution of choices using a smoothly transitioning percentage bar.\n\n### Features\n- **Title and Category Badge**: Displays the question as a title with the category as a badge.\n- **Option Buttons**: Two buttons for user selection.\n- **Percentage Bar**: Replaces buttons upon selection, showing the distribution with smooth transitions.\n- **Customization**: Easily configurable via props.\n\n### Props\n\n- `question` (string, required): The question text.\n- `category` (string, required): The category label.\n- `opt1` (string, required): Text for the first option button.\n- `opt2` (string, required): Text for the second option button.\n- `percOpt1` (number, required): Percentage for the first option.\n- `percOpt2` (number, required): Percentage for the second option.\n- `chosenOpt` (string, optional): The initially chosen option.\n\n### Usage\n\n```jsx\nimport React from \'react\';\nimport PollItem from \'./PollItem\';\n\nconst App = () => (\n  <PollItem\n    question="What is your favorite programming language?"\n    category="Survey"\n    opt1="JavaScript"\n    opt2="Python"\n    percOpt1={60}\n    percOpt2={40}\n  />\n);\n\nexport default App;\n```\n        '}}}},Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(liamc9npm__WEBPACK_IMPORTED_MODULE_1__.D0$,args),Default=Template.bind({});Default.args={question:"What is your favorite programming language?",category:"Survey",opt1:"JavaScript",opt2:"Python",percOpt1:60,percOpt2:40};const WithPreSelectedOption=Template.bind({});WithPreSelectedOption.args={question:"What is your preferred IDE?",category:"Preference",opt1:"VS Code",opt2:"IntelliJ",percOpt1:70,percOpt2:30,chosenOpt:"VS Code"};const MultipleInstances=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"20px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(liamc9npm__WEBPACK_IMPORTED_MODULE_1__.D0$,{question:"What is your favorite color?",category:"Preference",opt1:"Blue",opt2:"Red",percOpt1:70,percOpt2:30}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(liamc9npm__WEBPACK_IMPORTED_MODULE_1__.D0$,{question:"Which frontend framework do you prefer?",category:"Survey",opt1:"React",opt2:"Vue",percOpt1:55,percOpt2:45}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(liamc9npm__WEBPACK_IMPORTED_MODULE_1__.D0$,{question:"Do you like TypeScript?",category:"Feedback",opt1:"Yes",opt2:"No",percOpt1:80,percOpt2:20})),PercentagesNotAddingUp=Template.bind({});PercentagesNotAddingUp.args={question:"Which mobile OS do you prefer?",category:"Survey",opt1:"iOS",opt2:"Android",percOpt1:60,percOpt2:50};const LongTexts=Template.bind({});LongTexts.args={question:"Considering all factors such as performance, community support, and ecosystem, which programming language do you prefer for large-scale enterprise applications?",category:"In-depth Survey",opt1:"JavaScript",opt2:"Python",percOpt1:55,percOpt2:45};const __namedExportsOrder=["Default","WithPreSelectedOption","MultipleInstances","PercentagesNotAddingUp","LongTexts"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <PollItem {...args} />",...Default.parameters?.docs?.source}}},WithPreSelectedOption.parameters={...WithPreSelectedOption.parameters,docs:{...WithPreSelectedOption.parameters?.docs,source:{originalSource:"args => <PollItem {...args} />",...WithPreSelectedOption.parameters?.docs?.source}}},MultipleInstances.parameters={...MultipleInstances.parameters,docs:{...MultipleInstances.parameters?.docs,source:{originalSource:'() => <div style={{\n  display: \'flex\',\n  flexDirection: \'column\',\n  gap: \'20px\'\n}}>\r\n    <PollItem question="What is your favorite color?" category="Preference" opt1="Blue" opt2="Red" percOpt1={70} percOpt2={30} />\r\n    <PollItem question="Which frontend framework do you prefer?" category="Survey" opt1="React" opt2="Vue" percOpt1={55} percOpt2={45} />\r\n    <PollItem question="Do you like TypeScript?" category="Feedback" opt1="Yes" opt2="No" percOpt1={80} percOpt2={20} />\r\n  </div>',...MultipleInstances.parameters?.docs?.source}}},PercentagesNotAddingUp.parameters={...PercentagesNotAddingUp.parameters,docs:{...PercentagesNotAddingUp.parameters?.docs,source:{originalSource:"args => <PollItem {...args} />",...PercentagesNotAddingUp.parameters?.docs?.source}}},LongTexts.parameters={...LongTexts.parameters,docs:{...LongTexts.parameters?.docs,source:{originalSource:"args => <PollItem {...args} />",...LongTexts.parameters?.docs?.source}}}}}]);