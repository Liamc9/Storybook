{"version":3,"file":"stories-Lettz-components-ListingCard-stories.ddd103ef.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;AAOA;;;;AASA;;;;;;;;;;AAUA;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;AAgBA;;;;;;AAQA;;;;;;;;AAUA;;;;;;AAQA;;;;;AAOA;;;;;AAOA;;;;;;AAQA;;;AASA;;;;;;;;;;;;;AAaA;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClLA;;;AAKA","sources":["webpack://storybook/./src/components/Lettz/components/ListingCard.jsx","webpack://storybook/./src/components/atoms/carousels/ImageCarousel2.jsx"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MoneyIcon2, CalendarIcon, EditIcon, TrashIcon, LocationIcon } from \"../../Branding/icons/Icons\"; // Ensure these icons are correctly imported\r\nimport ImageCarousel2 from \"../../atoms/carousels/ImageCarousel2\";\r\n\r\n// Styled Components\r\n\r\nconst CardContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  background-color: #ffffff;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n  max-width: 600px;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    max-width: 100%;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  display: block;\r\n  height: 100%;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\n// New Styled Component for Image Wrapper\r\nconst ImageWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  aspect-ratio: 5 / 4; /* Set desired aspect ratio here */\r\n  overflow: hidden;\r\n\r\n  /* Ensure that ImageCarousel2 fills the wrapper */\r\n  .swiper-wrapper {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst RentBadge = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst DateRangeBadge = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  display: flex;\r\n  padding: 0.75rem;\r\n  background-color: #ffffff;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ProfilePicture = styled.div`\r\n  flex: 0 0 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  transition: transform 0.3s ease;\r\n\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 2px solid #ddd;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TitleText = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: 800;\r\n  color: #333;\r\n  margin-bottom: 0.2rem;\r\n`;\r\n\r\nconst LocationText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  color: #666;\r\n  gap: 0.1rem; /* Space between icon and text */\r\n`;\r\n\r\nconst LocationIconStyled = styled(LocationIcon)`\r\n  width: 25px;\r\n  height: 25px;\r\n`;\r\n\r\n// Overlay Styles\r\n\r\nconst ManagingOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6); /* Dark overlay */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center; /* Center vertically */\r\n  align-items: center; /* Center horizontally */\r\n  z-index: 20;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst OverlayButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem; /* Space between buttons */\r\n  width: 100%;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst UpdateButton = styled.button.attrs({\r\n  \"aria-label\": \"Update Listing\",\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #ffffff; /* White background */\r\n  color: #3b82f6; /* Blue text */\r\n  padding: 0.75rem 1rem;\r\n  justify-content: center;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n  border: 2px solid #3b82f6;\r\n\r\n  &:hover {\r\n    background-color: #3b82f6; /* Blue background on hover */\r\n    color: #ffffff; /* White text on hover */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5); /* Blue focus ring */\r\n  }\r\n`;\r\n\r\nconst RemoveButton = styled.button.attrs({\r\n  \"aria-label\": \"Remove Listing\",\r\n})`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff; /* White background */\r\n  color: #ef4444; /* Red text */\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n  border: 2px solid #ef4444;\r\n\r\n  &:hover {\r\n    background-color: #ef4444; /* Red background on hover */\r\n    color: #ffffff; /* White text on hover */\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.5); /* Red focus ring */\r\n  }\r\n`;\r\n\r\n// Main Component\r\n\r\nconst ListingCard = ({ data, isManaging, onUpdate, onRemove }) => {\r\n  const {\r\n    id,\r\n    images,\r\n    city,\r\n    county,\r\n    title, // Updated to use 'title'\r\n    rent,\r\n    startDate,\r\n    endDate,\r\n    photoURL,\r\n  } = data;\r\n\r\n  const dateRange =\r\n    startDate && endDate ? `${startDate} - ${endDate}` : \"Available Anytime\";\r\n\r\n  const defaultImage =\r\n    \"https://via.placeholder.com/600x600?text=No+Image+Available\";\r\n  const imageList = images && images.length > 0 ? images : [defaultImage];\r\n  const profileImage = photoURL || \"https://via.placeholder.com/150?text=Profile\";\r\n\r\n  // Card Content\r\n  const content = (\r\n    <CardContent>\r\n      <ImageWrapper>\r\n        <ImageCarousel2 images={imageList} />\r\n        {rent !== undefined && (\r\n          <RentBadge>\r\n            <MoneyIcon2 className=\"w-6 h-6 mr-2\" />â‚¬{rent}\r\n          </RentBadge>\r\n        )}\r\n        {(startDate || endDate) && (\r\n          <DateRangeBadge>\r\n            <CalendarIcon className=\"w-6 h-6 mr-2\" />\r\n            {dateRange}\r\n          </DateRangeBadge>\r\n        )}\r\n      </ImageWrapper>\r\n      <TextContainer>\r\n        <ProfilePicture>\r\n          <ProfileImage src={profileImage} alt=\"Profile\" />\r\n        </ProfilePicture>\r\n        <InfoContainer>\r\n          <TitleText>\r\n            {title ? title : \"Title Unavailable\"}\r\n          </TitleText>\r\n          <LocationText>\r\n            <LocationIconStyled className=\"w-5 h-5\" />\r\n            {city}, {county}\r\n          </LocationText>\r\n        </InfoContainer>\r\n      </TextContainer>\r\n      {isManaging && (\r\n        <ManagingOverlay>\r\n          <OverlayButtonsContainer>\r\n            <UpdateButton onClick={() => onUpdate(data)}>\r\n              <EditIcon className=\"w-5 h-5 mr-2\" />\r\n              Update\r\n            </UpdateButton>\r\n            <RemoveButton onClick={() => onRemove(id)}>\r\n              <TrashIcon className=\"w-5 h-5 mr-2\" />\r\n              Remove\r\n            </RemoveButton>\r\n          </OverlayButtonsContainer>\r\n        </ManagingOverlay>\r\n      )}\r\n    </CardContent>\r\n  );\r\n\r\n  return (\r\n    <CardContainer>\r\n      {!isManaging ? (\r\n        <StyledLink to={`/rooms/${id}`}>{content}</StyledLink>\r\n      ) : (\r\n        content\r\n      )}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nListingCard.defaultProps = {\r\n  isManaging: false,\r\n  onUpdate: () => {},\r\n  onRemove: () => {},\r\n};\r\n\r\n\r\nexport default ListingCard;\r\n","// src/components/cards/ImageCarousel2.jsx\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport { Pagination, A11y } from \"swiper/modules\";\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%; /* Ensure the container takes full height of its parent */\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin: 0;\r\n\r\n  /* Swiper Pagination customization */\r\n  .swiper-pagination {\r\n    bottom: 10px;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    /* Remove transform since flex handles centering */\r\n  }\r\n\r\n  .swiper-pagination-bullet {\r\n    background: rgba(255, 255, 255, 0.5);\r\n    width: 10px;\r\n    height: 10px;\r\n    opacity: 1;\r\n    margin: 0 5px;\r\n    border-radius: 50%;\r\n    transition: background 0.3s ease;\r\n  }\r\n\r\n  .swiper-pagination-bullet-active {\r\n    background: #ffffff;\r\n  }\r\n\r\n  .swiper-slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SwiperWrapper = styled(Swiper)`\r\n  width: 100%;\r\n  height: 100%; /* Ensure Swiper takes full height */\r\n`;\r\n\r\nconst ImageCarousel2 = ({ images }) => {\r\n  return (\r\n    <ImageContainer>\r\n      <SwiperWrapper\r\n        modules={[Pagination, A11y]}\r\n        spaceBetween={0}\r\n        slidesPerView={1}\r\n        pagination={{ clickable: true }}\r\n        loop={images.length > 1}\r\n      >\r\n        {images.map((imgUrl, index) => (\r\n          <SwiperSlide key={index}>\r\n            <img src={imgUrl} alt={`Image ${index + 1}`} />\r\n          </SwiperSlide>\r\n        ))}\r\n      </SwiperWrapper>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nImageCarousel2.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default ImageCarousel2;\r\n"],"names":[],"sourceRoot":""}