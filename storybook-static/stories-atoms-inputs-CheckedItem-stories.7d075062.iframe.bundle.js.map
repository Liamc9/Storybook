{"version":3,"file":"stories-atoms-inputs-CheckedItem-stories.7d075062.iframe.bundle.js","mappings":";;;;;;;;;;AAgBA;;;;AAMA;;;;;;;AASA;;;;;;;;;;;AAaA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;AASA;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;;;;;;;;;;;;AAeA","sources":["webpack://storybook/./src/components/atoms/inputs/CheckedItem.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styled Components\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 91.666667%; /* Equivalent to w-11/12 */\r\n  margin: 0 auto;\r\n  user-select: none;\r\n  gap: 1rem;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #94a3b8; /* Equivalent to text-slate-400 */\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  height: 1px;\r\n  width: 1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  border: 3px solid #cbd5e1; /* Equivalent to border-slate-300 */\r\n  background-color: #ffffff; /* bg-white */\r\n  border-radius: 0.5rem; /* rounded-lg */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* shadow-lg */\r\n  transition: all 0.2s ease-in-out;\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n\r\n  /* Checked State */\r\n  ${HiddenCheckbox}:checked + & {\r\n    border-color: ${({ color }) => color || \"#3b82f6\"}; /* Default to blue-500 */\r\n    box-shadow: 0 4px 6px ${({ color }) => color}33; /* 10% opacity */\r\n    color: ${({ color }) => color || \"#3b82f6\"};\r\n\r\n    &::before {\r\n      content: 'âœ“';\r\n      position: absolute;\r\n      top: 0.25rem;\r\n      left: 0.25rem;\r\n      width: 1.25rem;\r\n      height: 1.25rem;\r\n      border: 3px solid ${({ color }) => color || \"#3b82f6\"};\r\n      border-radius: 50%;\r\n      background-color: ${({ color }) => color || \"#3b82f6\"};\r\n      opacity: 1;\r\n      transform: scale(1);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: #ffffff;\r\n      font-size: 0.75rem;\r\n      transition: all 0.2s ease-in-out;\r\n    }\r\n  }\r\n\r\n  /* Pseudo-element before */\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0.25rem;\r\n    left: 0.25rem;\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n    border: 3px solid ${({ color }) => color || \"#3b82f6\"};\r\n    border-radius: 50%;\r\n    background-color: ${({ color }) => color || \"#3b82f6\"};\r\n    opacity: 0;\r\n    transform: scale(0);\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n\r\n  /* SVG and Label Text */\r\n  > span {\r\n    transition: all 0.2s ease-in-out;\r\n    text-align: center;\r\n    font-size: 0.875rem; \r\n  }\r\n`;\r\n\r\n// Component\r\nconst CheckedItem = ({\r\n  label,\r\n  svg,\r\n  onChange,\r\n  checked,\r\n  height = \"7rem\",\r\n  width = \"7rem\",\r\n  color = \"#3b82f6\",\r\n  required,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Label>\r\n        <HiddenCheckbox onChange={onChange} checked={checked} required={required} />\r\n        <StyledSpan height={height} width={width} color={color}>\r\n          <span>{svg}</span>\r\n          <span>{label}</span>\r\n        </StyledSpan>\r\n      </Label>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport default CheckedItem;\r\n"],"names":[],"sourceRoot":""}