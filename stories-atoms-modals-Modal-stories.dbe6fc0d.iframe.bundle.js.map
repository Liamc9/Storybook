{"version":3,"file":"stories-atoms-modals-Modal-stories.dbe6fc0d.iframe.bundle.js","mappings":";;;;;;;AAcA;;;;;;;AAYA;;;;;;;;;;;AAWA;AAGA;;AAEA;;;;;;;;AAUA;AAGA;;AAEA;;;;;;;;;;;;;AAeA;;AAIA;;;;AAMA;;;AAQA","sources":["webpack://storybook/./src/components/atoms/modals/Modal.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XIcon } from \"../../Branding/icons/Icons\";\r\n\r\n// Animations\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst slideIn = keyframes`\r\n  from {\r\n    transform: translateY(-20px);\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\n// Styled Components\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  ${(props) =>\r\n    props.animate &&\r\n    css`\r\n      animation: ${fadeIn} 0.3s ease-out forwards;\r\n    `}\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  position: relative;\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  overflow-y: auto;\r\n  ${(props) =>\r\n    props.animate &&\r\n    css`\r\n      animation: ${slideIn} 0.3s ease-out forwards;\r\n    `}\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 16px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  color: #333;\r\n\r\n  &:hover {\r\n    color: #555;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 16px;\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  font-size: 1rem;\r\n  color: #555;\r\n`;\r\n\r\n// Modal Component\r\nconst Modal = ({\r\n  isModalOpen,\r\n  closeModal,\r\n  title,\r\n  children,\r\n  animate = true,\r\n}) => {\r\n  useEffect(() => {\r\n    if (isModalOpen) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"\";\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = \"\";\r\n    };\r\n  }, [isModalOpen]);\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.key === \"Escape\" && isModalOpen) {\r\n        closeModal();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleEsc);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEsc);\r\n    };\r\n  }, [isModalOpen, closeModal]);\r\n\r\n  if (!isModalOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <Overlay animate={animate} onClick={closeModal}>\r\n      <ModalContainer\r\n        animate={animate}\r\n        onClick={(e) => e.stopPropagation()}\r\n        aria-modal=\"true\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modal-title\"\r\n      >\r\n        <CloseButton onClick={closeModal} aria-label=\"Close Modal\">\r\n          <XIcon />\r\n        </CloseButton>\r\n        <ModalContent>\r\n          {title && <ModalTitle id=\"modal-title\">{title}</ModalTitle>}\r\n          <ModalBody>{children}</ModalBody>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Overlay>,\r\n    document.getElementById(\"modal-root\")\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  isModalOpen: PropTypes.bool.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  animate: PropTypes.bool, // Enable or disable animations\r\n};\r\n\r\nexport default Modal;\r\n"],"names":[],"sourceRoot":""}