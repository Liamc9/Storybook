{"version":3,"file":"stories-Lettz-views-MessagesView-stories.43626498.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;AASA;;;;AAOA;;;;AAOA;;;;;;;;;;;;;;AAiBA;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;AC9FA;;;;;AAOA;;;;;AAOA;;;;AAMA;;;AAKA;;;AAKA;;;;;;;;;AAmDA;AC5FA","sources":["webpack://storybook/./src/components/Lettz/components/MessagesPrompt.jsx","webpack://storybook/./src/components/Lettz/components/ConversationItem.jsx","webpack://storybook/./src/components/Lettz/components/ConversationList.jsx"],"sourcesContent":["// src/components/MessagesPrompt.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport { LettzIcon } from '../../Branding/icons/Icons'; // Adjust the path as necessary\r\n\r\n// Styled Components\r\n\r\n// Enhanced Card styling\r\nconst Card = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center; /* Center content vertically within the card */\r\n  width: 100%;\r\n  max-width: 500px; /* Increased max-width for better layout */\r\n  min-height: 400px; /* Set a minimum height to make the card taller */\r\n  padding: 40px 30px; /* Increased padding for more spacious content */\r\n  border: 1px solid #ddd;\r\n  border-radius: 12px; /* Slightly larger border radius for a smoother look */\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); /* Enhanced shadow for depth */\r\n  background-color: #fff;\r\n  box-sizing: border-box;\r\n  margin-top: 10vh; /* Adjusted margin for better centering */\r\n\r\n  /* Responsive adjustments */\r\n  @media (max-width: 600px) {\r\n    min-height: 350px;\r\n    padding: 30px 20px;\r\n  }\r\n`;\r\n\r\n// Header for LettzIcon and \"Lettz\" text\r\nconst Header = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// Styled component for the Lettz text\r\nconst LogoText = styled.span`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  margin-left: 8px;\r\n`;\r\n\r\n// Styled component for LettzIcon\r\nconst StyledLettzIcon = styled(LettzIcon)`\r\n  width: 32px;\r\n  height: 32px;\r\ncolor: #A855F7;\r\n  `;\r\n\r\n// Enhanced IconWrapper\r\nconst IconWrapper = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: radial-gradient(circle at top left, #6a11cb, #A855F7);\r\n  border-radius: 50%;\r\n  margin: 24px 0;\r\n\r\n  span {\r\n    font-size: 40px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\n// Enhanced Text\r\nconst Text = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  text-align: center;\r\n  flex-grow: 1; /* Allow text to take up available space */\r\n`;\r\n\r\n// Enhanced Button\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 14px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #fff;\r\n  background-color: #A855F7;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #9333EA;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #7E22CE;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst MessagesPrompt = (currentUser) => {\r\n  const navigate = useNavigate(); // Initialize navigation\r\n\r\n  const handleLoginClick = () => {\r\n    if (!currentUser) {\r\n      // Redirect to login if not authenticated\r\n      navigate('/login', { state: { from: '/messages' } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Header>\r\n        <StyledLettzIcon /> {/* Styled icon */}\r\n        <LogoText>Lettz</LogoText>\r\n      </Header>\r\n      <IconWrapper>\r\n        {/* Replace with your desired icon */}\r\n        <span role=\"img\" aria-label=\"messages\">ðŸ’¬</span>\r\n      </IconWrapper>\r\n      <Text>Please log in to see your messages.</Text>\r\n      <Button onClick={handleLoginClick}>Login</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MessagesPrompt;\r\n","// src/components/ConversationItem.jsx\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Styled Components\r\nconst ItemWrapper = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px; /* Equivalent to h-20 */\r\n  padding: 1rem;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  position: relative; /* To position the timestamp */\r\n  &:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 9999px; /* Equivalent to rounded-full */\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  position: relative; /* To position the timestamp */\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: 1.3rem; /* Equivalent to text-base */\r\n  font-weight: 600; /* Equivalent to font-semibold */\r\n`;\r\n\r\nconst Timestamp = styled.span`\r\n  font-size: 0.75rem; /* Smaller font size */\r\n  color: #9ca3af; /* Equivalent to text-gray-400 */\r\n`;\r\n\r\nconst LastMessage = styled.span`\r\n  font-size: 0.875rem; /* Equivalent to text-sm */\r\n  color: #6b7280; /* Equivalent to text-gray-500 */\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2; /* Limit to 2 lines */\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80%;\r\n`;\r\n\r\n// Helper Function to Format Timestamp\r\nconst formatTimestamp = (timestamp) => {\r\n  if (!timestamp) return '';\r\n\r\n  // Convert Firestore Timestamp to Date\r\n  const messageDate = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\r\n  const now = new Date();\r\n\r\n  // Calculate difference in days\r\n  const startOfToday = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n  const startOfMessageDay = new Date(\r\n    messageDate.getFullYear(),\r\n    messageDate.getMonth(),\r\n    messageDate.getDate()\r\n  );\r\n\r\n  const diffTime = startOfToday - startOfMessageDay;\r\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffDays === 0) {\r\n    return 'Today';\r\n  } else if (diffDays === 1) {\r\n    return 'Yesterday';\r\n  } else {\r\n    return `${diffDays} days ago`;\r\n  }\r\n};\r\n\r\n// Component\r\nconst ConversationItem = ({ conversation, currentUser }) => {\r\n\r\n  // Find the other participant\r\n  const otherParticipant = conversation.participants.find(p => p.uid !== currentUser.uid);\r\n  if (!otherParticipant) {\r\n    return null;\r\n  }\r\n\r\n  // Format the timestamp\r\n  const formattedTimestamp = conversation.lastMessage?.timestamp\r\n    ? formatTimestamp(conversation.lastMessage.timestamp)\r\n    : '';\r\n\r\n  return (\r\n    <ItemWrapper to={`/conversation/${conversation.id}`}>\r\n      <Avatar src={otherParticipant.avatarUrl} alt={`${otherParticipant.name}'s avatar`} />\r\n      <Details>\r\n        <Header>\r\n          <Name>{otherParticipant.name}</Name>\r\n          <Timestamp>{formattedTimestamp}</Timestamp>\r\n        </Header>\r\n        <LastMessage>{conversation.lastMessage.text}</LastMessage>\r\n      </Details>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default ConversationItem;\r\n","// src/components/ConversationList.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport ConversationItem from './ConversationItem';\r\n\r\n// Styled Components\r\nconst ListWrapper = styled.div`\r\n`;\r\n\r\n\r\nconst ConversationList = ({ conversations, currentUser }) => {\r\n  return (\r\n    <ListWrapper>\r\n      {conversations.map((conversation) => (\r\n        <ConversationItem key={conversation.id} conversation={conversation} currentUser={currentUser}/>\r\n      ))}\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n"],"names":[],"sourceRoot":""}