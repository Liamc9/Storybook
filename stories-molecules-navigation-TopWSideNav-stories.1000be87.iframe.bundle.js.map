{"version":3,"file":"stories-molecules-navigation-TopWSideNav-stories.1000be87.iframe.bundle.js","mappings":";;;;;AAiFA;;;;;;;;;;AAYA;;;;;;;;;;AAYA;;;;;;AAQA;;AAIA;;;;;;;;;;;AAWA;;;;;;;AASA;;;;;;;;AAUA;;;;AAIA;;AAEA;;;;;;;;;;;AAaA;;;;;;AAQA;;;AAKA;;;;AAMA;;;AAKA;;;AAKA;;;;;;;;;;;;;;AAgBA;;;;;AAOA;;;;;;;;;AAWA;;;;;;;;;;;;;;;;AChOA","sources":["webpack://storybook/./src/components/molecules/navigation/TopWSideNav.jsx","webpack://storybook/./src/stories/molecules/navigation/TopWSideNav.stories.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { MenuIcon, CogIcon, LoginIcon } from \"../../Branding/icons/Icons\";\r\n\r\nexport default function TopWSideNav({\r\n  appName = \"AppName\",\r\n  signInColor = \"#000000\",\r\n  navLinks = [],\r\n  username = \"John Doe\",\r\n  profilePic = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg\",\r\n  onLogout,\r\n}) {\r\n  const [isSideNavOpen, setIsSideNavOpen] = useState(false);\r\n\r\n  const toggleSideNav = () => setIsSideNavOpen(!isSideNavOpen);\r\n\r\n  const closeSideNav = () => setIsSideNavOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <NavBar>\r\n        <NavContent>\r\n          <DrawerButton onClick={toggleSideNav}>\r\n            <MenuIcon className=\"icon\" />\r\n          </DrawerButton>\r\n          <BrandLink to=\"/home\">{appName}</BrandLink>\r\n          <SignInLink to=\"/login\" signInColor={signInColor}>\r\n            Sign In\r\n          </SignInLink>\r\n        </NavContent>\r\n      </NavBar>\r\n      {isSideNavOpen && <Overlay onClick={closeSideNav} />}\r\n      <SideNavContainer isOpen={isSideNavOpen} onClick={(e) => e.stopPropagation()}>\r\n        <SideNavHeader to=\"/profile\" onClick={closeSideNav}>\r\n          <ProfileImage src={profilePic} alt=\"Profile\" />\r\n          <ProfileInfo>\r\n            <Username>{username}</Username>\r\n            <ViewProfile>View Profile</ViewProfile>\r\n          </ProfileInfo>\r\n        </SideNavHeader>\r\n\r\n        <NavLinks>\r\n          {navLinks.map(({ name, path, Icon }, index) => (\r\n            <StyledLink to={path} key={index} onClick={closeSideNav}>\r\n              {Icon && <IconWrapper>{<Icon className=\"icon\" />}</IconWrapper>}\r\n              <span>{name}</span>\r\n            </StyledLink>\r\n          ))}\r\n        </NavLinks>\r\n\r\n        <FooterLinks>\r\n          <StyledLink to=\"/settings\" onClick={closeSideNav}>\r\n            <IconWrapper>\r\n              <CogIcon className=\"icon\" />\r\n            </IconWrapper>\r\n            <span>Settings</span>\r\n          </StyledLink>\r\n          <LogoutButton\r\n            onClick={() => {\r\n              onLogout();\r\n              closeSideNav();\r\n            }}\r\n          >\r\n            <IconWrapper>\r\n              <LoginIcon className=\"icon\" />\r\n            </IconWrapper>\r\n            <span>Log out</span>\r\n          </LogoutButton>\r\n        </FooterLinks>\r\n      </SideNavContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n// Styled Components\r\nconst NavBar = styled.nav`\r\n  position: relative;\r\n  background-color: white;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n`;\r\n\r\nconst NavContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0.75rem; /* Reduced height */\r\n  box-sizing: border-box;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 0.75rem 1.5rem; /* Reduced height */\r\n  }\r\n`;\r\n\r\nconst DrawerButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 1rem;\r\n\r\n  .icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BrandLink = styled(Link)`\r\n  font-size: 1.5rem; /* Adjusted for reduced height */\r\n  font-weight: bold;\r\n  color: #1f2937;\r\n  text-decoration: none;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst SignInLink = styled(Link)`\r\n  border-radius: 0.375rem;\r\n  background-color: ${(props) => props.signInColor};\r\n  padding: 0.5rem 1rem;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(124, 58, 237, 0.5);\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 49;\r\n  transition: opacity 0.3s ease-in-out;\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst SideNavContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 16rem;\r\n  background: #ffffff;\r\n  color: #1a202c;\r\n  transform: ${({ isOpen }) => (isOpen ? \"translateX(0)\" : \"translateX(-100%)\")};\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: transform 0.3s ease-in-out;\r\n  box-shadow: ${({ isOpen }) => (isOpen ? \"0 4px 12px rgba(0, 0, 0, 0.1)\" : \"none\")};\r\n  z-index: 50;\r\n`;\r\n\r\nconst SideNavHeader = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  &:hover {\r\n    background-color: #f7fafc;\r\n  }\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  margin-right: 1rem;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst ProfileInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Username = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n`;\r\n\r\nconst ViewProfile = styled.div`\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n`;\r\n\r\nconst NavLinks = styled.nav`\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem 1.5rem;\r\n  color: #2d3748;\r\n  text-decoration: none;\r\n  transition: background 0.2s, color 0.2s;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n\r\n  &:hover {\r\n    background: #f7fafc;\r\n    color: #1a202c;\r\n  }\r\n`;\r\n\r\nconst FooterLinks = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-top: 1px solid #e2e8f0;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 0.75rem;\r\n\r\n  .icon {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem 1.5rem;\r\n  background: none;\r\n  border: none;\r\n  color: #2d3748;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  text-align: left;\r\n\r\n  &:hover {\r\n    background: #f7fafc;\r\n    color: #1a202c;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport TopWSideNav from '../../../components/molecules/navigation/TopWSideNav';\r\nimport { MenuIcon, CogIcon, LoginIcon } from '../../../components/Branding/icons/Icons';\r\n\r\nexport default {\r\n  title: 'Molecules/Navigation/Mobile/NavBar/TopWSideNav',\r\n  component: TopWSideNav,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    (Story) => (\r\n      <Router>\r\n        <div style={{ height: '100vh' }}>\r\n          <Story />\r\n        </div>\r\n      </Router>\r\n    ),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\n### TopWSideNav Component\r\n\r\nThe \\`TopWSideNav\\` component combines both a top navigation bar and a side navigation drawer. It allows dynamic configuration of the app name, sign-in button color, navigation links, username, profile picture, and logout functionality.\r\n\r\n#### Props\r\n- \\`appName\\` (string): The name of the application displayed in the top navigation.\r\n- \\`signInColor\\` (string): The color of the sign-in button.\r\n- \\`navLinks\\` (array): An array of objects representing the navigation links.\r\n- \\`username\\` (string): The username displayed in the side navigation header.\r\n- \\`profilePic\\` (string): The URL of the profile picture displayed in the side navigation header.\r\n- \\`onLogout\\` (function): A callback function triggered when the \"Log out\" button is clicked.\r\n\r\n#### Example Usage\r\n\r\n\\`\\`\\`jsx\r\n<TopWSideNav\r\n  appName=\"MyApp\"\r\n  signInColor=\"#4caf50\"\r\n  navLinks={[\r\n    { name: \"Home\", path: \"/home\", Icon: MenuIcon },\r\n    { name: \"Web Development\", path: \"/webdev\", Icon: CogIcon },\r\n    { name: \"Analytics\", path: \"/analytics\", Icon: LoginIcon },\r\n  ]}\r\n  username=\"Jane Smith\"\r\n  profilePic=\"https://example.com/jane-smith.jpg\"\r\n  onLogout={() => console.log(\"Logged out\")}\r\n/>\r\n\\`\\`\\`\r\n`,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => <TopWSideNav {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  appName: 'MyApp',\r\n  signInColor: '#000000',\r\n  navLinks: [\r\n    { name: 'Home', path: '/home', Icon: MenuIcon },\r\n    { name: 'Web Development', path: '/webdev', Icon: CogIcon },\r\n    { name: 'Analytics', path: '/analytics', Icon: LoginIcon },\r\n  ],\r\n  username: 'John Doe',\r\n  profilePic: 'https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg',\r\n  onLogout: () => console.log('Logged out'),\r\n};\r\n\r\nexport const CustomSignInColor = Template.bind({});\r\nCustomSignInColor.args = {\r\n  appName: 'CustomApp',\r\n  signInColor: '#4caf50', // Custom green sign-in button\r\n  navLinks: [\r\n    { name: 'Dashboard', path: '/dashboard', Icon: MenuIcon },\r\n    { name: 'Settings', path: '/settings', Icon: CogIcon },\r\n    { name: 'Profile', path: '/profile', Icon: LoginIcon },\r\n  ],\r\n  username: 'Jane Smith',\r\n  profilePic: 'https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg',\r\n  onLogout: () => console.log('Logged out'),\r\n};\r\n"],"names":[],"sourceRoot":""}