"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[1512],{"./src/stories/atoms/menuitem/EditableTextField.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components_atoms_menuitem_EditableTextField__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/atoms/menuitem/EditableTextField.jsx"),_components_Branding_icons_Icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Branding/icons/Icons.jsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Atoms/MenuItem/EditableTextField",component:_components_atoms_menuitem_EditableTextField__WEBPACK_IMPORTED_MODULE_1__.A,tags:["atoms","autodocs"],parameters:{docs:{description:{component:"\nThe `EditableTextField` component allows users to display a field value with an option to edit it inline. \nIt includes an optional icon and allows you to pass the updated value to a parent component.\n\n### Features:\n- **Edit Button:** Toggles between editable and view-only modes.\n- **Editable Input:** Displays an input field when in editing mode, which automatically saves the updated value on blur.\n- **Props:**\n  - `icon` (optional): A React component for displaying an icon.\n  - `name`: The label for the field.\n  - `value`: The initial value for the field.\n  - `onUpdate`: Callback for handling updates to the field value.\n\n### Usage:\n```jsx\nimport React, { useState } from 'react';\nimport EditableTextField from '../../../components/atoms/menuitem/EditableTextField';\nimport { UserIcon2 } from '../../../components/icons/Icons';\n\nconst Example = () => {\n  const [value, setValue] = useState('Editable Field Value');\n\n  const handleUpdate = (newValue) => {\n    setValue(newValue);\n    console.log('Updated value:', newValue);\n  };\n\n  return (\n    <EditableTextField\n      icon={UserIcon2}\n      name=\"Field Name\"\n      value={value}\n      onUpdate={handleUpdate}\n    />\n  );\n};\n\nexport default Example;\n```\n"}}}},Default=(args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.value);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_atoms_menuitem_EditableTextField__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value,onUpdate:newValue=>{setValue(newValue)}}))}).bind({});Default.args={icon:_components_Branding_icons_Icons__WEBPACK_IMPORTED_MODULE_2__.UserIcon2,name:"Field Name",value:"Editable Field Value"},Default.parameters={docs:{description:{story:'\nThis is the default usage of the `EditableTextField` component. Click the "Edit" button to modify the field value.\nThe updated value is saved on blur or when you click "Done".'}}};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleUpdate = newValue => {\n    setValue(newValue);\n  };\n  return <EditableTextField {...args} value={value} onUpdate={handleUpdate} />;\n}",...Default.parameters?.docs?.source}}}},"./src/components/atoms/menuitem/EditableTextField.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const FieldContainer=styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay.div`
  display: flex;
  flex-direction: column;
`,FieldName=styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay.div`
  font-size: 14px; /* Slightly larger for better readability */
  font-weight: 600; /* Makes it bold for emphasis */
  color: #6b7280; /* Tailwind's gray-500 equivalent */
`,EditableInput=styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay.input`
  font-size: 16px;
  font-weight: 500;
  color: #111827; /* Tailwind's gray-900 equivalent */
  background-color: transparent; /* Removes background */
  padding: 4px 0 2px; /* Adds vertical padding, no horizontal padding */
  border: none; /* Removes all borders */
  border-bottom: 2px solid #d1d5db; /* Bottom border only */
  transition: border-color 0.3s ease; /* Smooth transition for focus effect */
  outline: none; /* Removes default focus outline */

  &:focus {
    border-bottom: 2px solid #3b82f6; /* Blue bottom border on focus */
  }

  &:hover {
    border-bottom: 2px solid #6b7280; /* Slightly darker border on hover */
  }
`,__WEBPACK_DEFAULT_EXPORT__=_ref=>{let{name,value,onChange}=_ref;const[currentValue,setCurrentValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(FieldContainer,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(FieldName,null,name),react__WEBPACK_IMPORTED_MODULE_0__.createElement(EditableInput,{value:currentValue,onChange:e=>{const newValue=e.target.value;setCurrentValue(newValue)},onBlur:()=>{onChange(currentValue)}}))}}}]);
//# sourceMappingURL=stories-atoms-menuitem-EditableTextField-stories.6db4e62c.iframe.bundle.js.map