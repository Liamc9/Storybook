"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[5328],{"./src/stories/search/Feed.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,InfiniteScrollingFeed:()=>InfiniteScrollingFeed,LoadMoreFeed:()=>LoadMoreFeed,PaginatedFeed:()=>PaginatedFeed,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/search/Feed.jsx"),_components_search_FeedItem__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/search/FeedItem.jsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Search/Feed/Feed",component:_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__.A,parameters:{docs:{description:{component:"\n# Feed Component: Detailed Explanation\n\nThe **Feed** component is designed to handle:\n1. **Filtering & Sorting** of items (via `sortBy` and `selectedFilters`).\n2. **Pagination** (through the `pagination` prop).\n3. **Load More** items on a button click (through the `loadMore` prop).\n4. **Infinite Scrolling** (through the `infiniteScroll` prop).\n\nAdditionally, you can provide:\n- A **custom item component** via `ItemComponent`.\n- A **scroll container reference** via `scrollContainerRef` if you prefer container-based scrolling instead of the default page-level scrolling.\n\n---\n\n## 1) Basic Setup\n\n```jsx\n<Feed \n  items={mockItems}\n  sortBy={mockSortBy}\n  selectedFilters={mockSelectedFilters}\n  /* ...other props... */\n/>\n```\n\n- **`items`**: An array of data objects to be rendered.\n- **`sortBy`**: A comparator function for sorting. For example: \n  ```js\n  const mockSortBy = (a, b) => a.priority.localeCompare(b.priority);\n  ```\n- **`selectedFilters`**: An object describing which items to include based on certain categories. For example:\n  ```js\n  const mockSelectedFilters = {\n    status: ['completed', 'pending']\n  };\n  ```\n  Every item is checked against these filters to determine if it should be visible.\n\n---\n\n## 2) Pagination\n\nUse the **`pagination`** prop to enable pagination. `pagination` indicates how many items per page you want. The component will automatically display page buttons and manage the current page state.\n\n```jsx\n<Feed\n  items={mockItems} \n  sortBy={mockSortBy}\n  selectedFilters={mockSelectedFilters}\n  pagination={5}  // 5 items per page\n  ItemComponent={FeedItem}\n/>\n```\n\n**Key Points**:\n- When paginated, the component generates an array of page numbers and shows them. Clicking a page button changes `currentPage` inside the feed logic.\n- The total number of pages = `Math.ceil(totalItems / pagination)`.\n\n---\n\n## 3) Load More\n\nUse the **`loadMore`** prop if you prefer a \"Load More\" button to gradually reveal items. For example, setting `loadMore={5}` will show an initial 5 items, then each press of the **Load More** button reveals 5 more.\n\n```jsx\n<Feed\n  items={mockItems}\n  sortBy={mockSortBy}\n  selectedFilters={mockSelectedFilters}\n  loadMore={5}  // loads 5 more items each click\n  ItemComponent={FeedItem}\n/>\n```\n\n**Key Points**:\n- The initial state will show 5 items (if `loadMore={5}`).\n- Each button click calls an internal function to increase the `visibleCount` by 5, up to the total length of `items`.\n- If all items are displayed, the **Load More** button disappears.\n\n---\n\n## 4) Infinite Scrolling\n\nUse the **`infiniteScroll`** prop to load items automatically as the user reaches the bottom of the feed. For example, `infiniteScroll={10}` means:\n1. Start by showing 10 items.\n2. Whenever the user scrolls to the bottom, load 10 more, until all items are visible.\n\nBy default, **infinite scrolling** attaches a scroll listener to the **window** object. You can enable container-based scrolling by providing a **`scrollContainerRef`** that references a scrollable div.\n\n### Container-Based Scrolling\n\n1. Create a scrollable container (e.g., a `<div>`) with a fixed height and `overflow-y: auto`.\n2. Use a React ref for that container.\n3. Pass that ref as `scrollContainerRef` to the **Feed**.\n\n```jsx\nconst containerRef = useRef(null);\n\n<div\n  ref={containerRef}\n  style={{\n    height: '400px',\n    overflowY: 'auto',\n    border: '1px solid #ccc',\n    padding: '1rem',\n  }}\n>\n  <Feed\n    items={mockItems}\n    sortBy={mockSortBy}\n    selectedFilters={mockSelectedFilters}\n    infiniteScroll={10}               // 10 items at a time\n    ItemComponent={FeedItem}\n    scrollContainerRef={containerRef} // container-based scrolling\n  />\n</div>\n```\n\n**How It Works**:\n- If `scrollContainerRef` is provided, the feed logic calculates the distance from the bottom **of the container**, rather than the whole page.\n- Once the distance to bottom is less than a threshold (e.g., 50px), it appends more items (by increasing the internal `visibleCount`).\n- This continues until all items are displayed.\n\n**Without** `scrollContainerRef`, the same logic attaches to the **window** scroll event, allowing you to do \"infinite page scroll.\"\n\n---\n\n## 5) Putting It All Together\n\nBelow are example stories demonstrating each mode:\n- **`Default`**: All items are shown at once (no pagination, no load more, no infinite scroll).\n- **`PaginatedFeed`**: Pagination with 5 items per page.\n- **`LoadMoreFeed`**: A \"Load More\" button revealing items in increments of 5.\n- **`InfiniteScrollingFeed`**: Automatically loads more items as you scroll, using a container of fixed height.\n\nEnjoy experimenting with the `Feed` component in various scenarios!\n        "}}}},mockItems=Array.from({length:50},((_,i)=>({id:i+1,status:i%2==0?"completed":"pending",priority:["low","medium","high"][i%3],title:`Task ${i+1}`}))),mockSortBy=(a,b)=>a.priority.localeCompare(b.priority),mockSelectedFilters={status:["completed","pending"]},Default=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__.A,{items:mockItems,sortBy:mockSortBy,selectedFilters:mockSelectedFilters}),PaginatedFeed=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__.A,{items:mockItems,sortBy:mockSortBy,selectedFilters:mockSelectedFilters,pagination:5,ItemComponent:_components_search_FeedItem__WEBPACK_IMPORTED_MODULE_2__.A}),LoadMoreFeed=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__.A,{items:mockItems,sortBy:mockSortBy,selectedFilters:mockSelectedFilters,loadMore:5,ItemComponent:_components_search_FeedItem__WEBPACK_IMPORTED_MODULE_2__.A}),InfiniteScrollingFeed=()=>{const containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:containerRef,style:{height:"400px",overflowY:"auto",border:"1px solid #ccc",padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_search_Feed__WEBPACK_IMPORTED_MODULE_1__.A,{items:mockItems,sortBy:mockSortBy,selectedFilters:mockSelectedFilters,infiniteScroll:10,ItemComponent:_components_search_FeedItem__WEBPACK_IMPORTED_MODULE_2__.A,scrollContainerRef:containerRef}))},__namedExportsOrder=["Default","PaginatedFeed","LoadMoreFeed","InfiniteScrollingFeed"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <Feed items={mockItems} sortBy={mockSortBy} selectedFilters={mockSelectedFilters} />",...Default.parameters?.docs?.source}}},PaginatedFeed.parameters={...PaginatedFeed.parameters,docs:{...PaginatedFeed.parameters?.docs,source:{originalSource:"() => <Feed items={mockItems} sortBy={mockSortBy} selectedFilters={mockSelectedFilters} pagination={5} ItemComponent={FeedItem} />",...PaginatedFeed.parameters?.docs?.source}}},LoadMoreFeed.parameters={...LoadMoreFeed.parameters,docs:{...LoadMoreFeed.parameters?.docs,source:{originalSource:"() => <Feed items={mockItems} sortBy={mockSortBy} selectedFilters={mockSelectedFilters} loadMore={5} ItemComponent={FeedItem} />",...LoadMoreFeed.parameters?.docs?.source}}},InfiniteScrollingFeed.parameters={...InfiniteScrollingFeed.parameters,docs:{...InfiniteScrollingFeed.parameters?.docs,source:{originalSource:"() => {\n  const containerRef = useRef(null);\n  return <div ref={containerRef} style={{\n    height: '400px',\n    overflowY: 'auto',\n    border: '1px solid #ccc',\n    padding: '1rem'\n  }}>\r\n      <Feed items={mockItems} sortBy={mockSortBy} selectedFilters={mockSelectedFilters} infiniteScroll={10} // loads 10 items at a time\n    ItemComponent={FeedItem} scrollContainerRef={containerRef} // specify container for infinite scroll\n    />\r\n    </div>;\n}",...InfiniteScrollingFeed.parameters?.docs?.source},description:{story:"Infinite Scrolling in a container:\r\nWe provide a fixed-height container with scroll for demonstration\r\nin Storybook. In a real application, you can omit the ref for page-level\r\nscrolling or keep it for container-based scrolling.",...InfiniteScrollingFeed.parameters?.docs?.description}}}},"./src/components/search/Feed.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>search_Feed});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),FeedItem=__webpack_require__("./src/components/search/FeedItem.jsx");const FeedContainer=styled_components_browser_esm.default.div`
  display: flex;
  flex-direction: column;
`,PaginationContainer=styled_components_browser_esm.default.div`
  display: flex;
  justify-content: center;
  margin-top: 20px;
  gap: 8px;
`,PageButton=styled_components_browser_esm.default.button`
  padding: 8px 12px;
  border: none;
  background-color: ${_ref=>{let{active}=_ref;return active?"#007bff":"#e0e0e0"}};
  color: ${_ref2=>{let{active}=_ref2;return active?"#fff":"#000"}};
  cursor: pointer;
  border-radius: 4px;
  
  &:hover {
    background-color: ${_ref3=>{let{active}=_ref3;return active?"#0056b3":"#ccc"}};
  }
`,LoadMoreButton=styled_components_browser_esm.default.button`
  margin: 20px auto;
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  
  &:hover {
    background-color: #0056b3;
  }
`,search_Feed=_ref4=>{let{items=[],sortBy,selectedFilters={},ItemComponent=FeedItem.A,pagination,loadMore,infiniteScroll,scrollContainerRef}=_ref4;const{itemsToRender,pages,currentPage,setCurrentPage,hasMoreItems,handleLoadMore}=function FeedLogic(_ref){let{items=[],sortBy,selectedFilters={},pagination,loadMore,infiniteScroll,scrollContainerRef}=_ref;const filteredItems=items.filter((item=>Object.entries(selectedFilters).every((_ref2=>{let[category,values]=_ref2;return!values||0===values.length||values.includes(item[category])})))),sortedItems=sortBy?[...filteredItems].sort(sortBy):filteredItems,[currentPage,setCurrentPage]=(0,react.useState)(1),[visibleCount,setVisibleCount]=(0,react.useState)((()=>infiniteScroll||loadMore||sortedItems.length)),itemsPerPage=pagination||sortedItems.length,totalPages=Math.ceil(sortedItems.length/itemsPerPage);(0,react.useEffect)((()=>{pagination&&currentPage>totalPages&&setCurrentPage(1)}),[pagination,totalPages,currentPage]),(0,react.useEffect)((()=>{if(!infiniteScroll)return;const handleScroll=()=>{let distanceFromBottom=0;if(null!=scrollContainerRef&&scrollContainerRef.current){const{scrollTop,scrollHeight,clientHeight}=scrollContainerRef.current;distanceFromBottom=scrollHeight-(scrollTop+clientHeight)}else{const{scrollY,innerHeight}=window,{offsetHeight}=document.body;distanceFromBottom=offsetHeight-(scrollY+innerHeight)}distanceFromBottom<50&&setVisibleCount((prev=>Math.min(prev+infiniteScroll,sortedItems.length)))},scrollTarget=(null==scrollContainerRef?void 0:scrollContainerRef.current)||window;return scrollTarget.addEventListener("scroll",handleScroll),()=>{scrollTarget.removeEventListener("scroll",handleScroll)}}),[infiniteScroll,sortedItems.length,scrollContainerRef]);let itemsToRender=sortedItems,pages=null,hasMoreItems=!1;if(pagination){const startIndex=(currentPage-1)*itemsPerPage,endIndex=startIndex+itemsPerPage;itemsToRender=sortedItems.slice(startIndex,endIndex),totalPages>1&&(pages=Array.from({length:totalPages},((_,i)=>i+1)))}else infiniteScroll?itemsToRender=sortedItems.slice(0,visibleCount):loadMore&&(itemsToRender=sortedItems.slice(0,visibleCount),hasMoreItems=visibleCount<sortedItems.length);return{itemsToRender,pages,currentPage,setCurrentPage,hasMoreItems,handleLoadMore:()=>{setVisibleCount((prev=>Math.min(prev+loadMore,sortedItems.length)))}}}({items,sortBy,selectedFilters,pagination,loadMore,infiniteScroll,scrollContainerRef});return react.createElement(FeedContainer,null,itemsToRender.map(((item,index)=>react.createElement(ItemComponent,{key:index,data:item}))),(null==pages?void 0:pages.length)>1&&react.createElement(PaginationContainer,null,pages.map((page=>react.createElement(PageButton,{key:page,active:page===currentPage,onClick:()=>setCurrentPage(page)},page)))),loadMore&&hasMoreItems&&react.createElement(LoadMoreButton,{onClick:handleLoadMore},"Load More"))}},"./src/components/search/FeedItem.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const FeedItemContainer=styled_components__WEBPACK_IMPORTED_MODULE_1__.default.div`
  border: 1px solid #ccc;
  padding: 1rem;
  border-radius: 4px;
  background: #fff;
`,Title=styled_components__WEBPACK_IMPORTED_MODULE_1__.default.h3`
  margin: 0 0 0.5rem 0;
`,Description=styled_components__WEBPACK_IMPORTED_MODULE_1__.default.p`
  margin: 0;
`,__WEBPACK_DEFAULT_EXPORT__=_ref=>{let{data}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(FeedItemContainer,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Title,null,data.title),react__WEBPACK_IMPORTED_MODULE_0__.createElement(Description,null,data.description))}}}]);
//# sourceMappingURL=stories-search-Feed-stories.24765849.iframe.bundle.js.map