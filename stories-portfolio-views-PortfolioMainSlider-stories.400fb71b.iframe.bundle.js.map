{"version":3,"file":"stories-portfolio-views-PortfolioMainSlider-stories.400fb71b.iframe.bundle.js","mappings":";;;;;AA8EA;;;;;;;;;;AAYA;;;;;;;;;;AAYA;;;;;;AAQA;;AAIA;;;;;;;;;;;AAzCA;;;;;;;AA6DA;;;;;;;;AAUA;;;;AAIA;;AAEA;;;;;;;;;;;AAaA;;;;;;AAQA;;;AAKA;;;;AAMA;;;AAKA;;;AAKA;;;;;;;;;;;;;;AAgBA;;;;;AAOA;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MA;;;;;;;;;;;AAaA;;;AAKA;;;;;;;;AAUA;AAGA;AACA;;;;;;AAMA;;;;;AAOA;;;;;;;;;;;;;;;AAiBA","sources":["webpack://storybook/./src/components/navigation/SideBar.jsx","webpack://storybook/./src/components/navigation/TopNavBar2.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SideBar({\r\n  navLinks = [],\r\n  username,\r\n  profilePic,\r\n  onLogout,\r\n  isSideNavOpen,\r\n  closeSideNav,\r\n  hideProfile = false,\r\n}) {\r\n  // Separate main and footer links based on a property (e.g., isFooter)\r\n  const mainLinks = navLinks.filter(link => !link.isFooter);\r\n  const footerLinks = navLinks.filter(link => link.isFooter);\r\n\r\n  return (\r\n    <>\r\n      {isSideNavOpen && <Overlay onClick={closeSideNav} />}\r\n      <SideNavContainer isOpen={isSideNavOpen} onClick={(e) => e.stopPropagation()}>\r\n        {(!hideProfile && username && profilePic) && (\r\n          <SideNavHeader to=\"/profile\" onClick={closeSideNav}>\r\n            <ProfileImage src={profilePic} alt=\"Profile\" />\r\n            <ProfileInfo>\r\n              <Username>{username}</Username>\r\n              <ViewProfile>View Profile</ViewProfile>\r\n            </ProfileInfo>\r\n          </SideNavHeader>\r\n        )}\r\n\r\n        <NavLinks>\r\n          {mainLinks.map(({ name, path, Icon }, index) => (\r\n            <StyledLink to={path} key={index} onClick={closeSideNav}>\r\n              {Icon && (\r\n                <IconWrapper>\r\n                  <Icon className=\"icon\" />\r\n                </IconWrapper>\r\n              )}\r\n              <span>{name}</span>\r\n            </StyledLink>\r\n          ))}\r\n        </NavLinks>\r\n\r\n        <FooterLinks>\r\n          {footerLinks.map(({ name, path, Icon }, index) => (\r\n            <StyledLink to={path} key={index} onClick={closeSideNav}>\r\n              {Icon && (\r\n                <IconWrapper>\r\n                  <Icon className=\"icon\" />\r\n                </IconWrapper>\r\n              )}\r\n              <span>{name}</span>\r\n            </StyledLink>\r\n          ))}\r\n          {onLogout && (\r\n            <LogoutButton\r\n              onClick={() => {\r\n                onLogout();\r\n                closeSideNav();\r\n              }}\r\n            >\r\n              <span>Log out</span>\r\n            </LogoutButton>\r\n          )}\r\n        </FooterLinks>\r\n      </SideNavContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// Styled Components remain the same\r\nconst NavBar = styled.nav`\r\n  position: relative;\r\n  background-color: white;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n`;\r\n\r\nconst NavContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0.75rem;\r\n  box-sizing: border-box;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 0.75rem 1.5rem;\r\n  }\r\n`;\r\n\r\nconst DrawerButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 1rem;\r\n\r\n  .icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BrandLink = styled(Link)`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: #1f2937;\r\n  text-decoration: none;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst SignInLink = styled(Link)`\r\n  border-radius: 0.375rem;\r\n  background-color: ${(props) => props.signInColor};\r\n  padding: 0.5rem 1rem;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(124, 58, 237, 0.5);\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 49;\r\n  transition: opacity 0.3s ease-in-out;\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst SideNavContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 16rem;\r\n  background: #ffffff;\r\n  color: #1a202c;\r\n  transform: ${({ isOpen }) => (isOpen ? \"translateX(0)\" : \"translateX(-100%)\")};\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: transform 0.3s ease-in-out;\r\n  box-shadow: ${({ isOpen }) => (isOpen ? \"0 4px 12px rgba(0, 0, 0, 0.1)\" : \"none\")};\r\n  z-index: 50;\r\n`;\r\n\r\nconst SideNavHeader = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  &:hover {\r\n    background-color: #f7fafc;\r\n  }\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  margin-right: 1rem;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst ProfileInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Username = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n`;\r\n\r\nconst ViewProfile = styled.div`\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n`;\r\n\r\nconst NavLinks = styled.nav`\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem 1.5rem;\r\n  color: #2d3748;\r\n  text-decoration: none;\r\n  transition: background 0.2s, color 0.2s;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n\r\n  &:hover {\r\n    background: #f7fafc;\r\n    color: #1a202c;\r\n  }\r\n`;\r\n\r\nconst FooterLinks = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-top: 1px solid #e2e8f0;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 0.75rem;\r\n\r\n  .icon {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem 1.5rem;\r\n  background: none;\r\n  border: none;\r\n  color: #2d3748;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  text-align: left;\r\n\r\n  &:hover {\r\n    background: #f7fafc;\r\n    color: #1a202c;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SideBar from './SideBar';\r\nimport styled from 'styled-components';\r\nimport { MenuIcon } from \"../Branding/icons/Icons\";\r\n\r\nconst NavBarContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 50;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 62px;\r\n  white-space: nowrap;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  border-bottom: 1px solid rgba(44, 45, 42, 0.25);\r\n  background-color: var(--beach-bg);\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst DrawerButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 1rem;\r\n\r\n  .icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 116px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  display: none;\r\n  @media (min-width: 640px) {\r\n    display: flex;\r\n    margin-left: auto;\r\n    align-items: center;\r\n    gap: 32px;\r\n  }\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n  color: ${(props) => (props.active ? 'blue' : 'black')};\r\n  border-bottom: ${(props) => (props.active ? '2px solid blue' : 'none')};\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst HeaderIcons = styled.div`\r\n  margin-left: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n  border-radius: 9999px;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 8px 24px;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #333;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  &:focus {\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nconst TopNavBar2 = ({ menuItems, activeTab: propActiveTab, onTabClick }) => {\r\n  const [activeTab, setActiveTab] = useState(propActiveTab);\r\n  const navigate = useNavigate();\r\n  const [isSideNavOpen, setIsSideNavOpen] = useState(false);\r\n\r\n  const toggleSideNav = () => setIsSideNavOpen((prev) => !prev);\r\n  const closeSideNav = () => setIsSideNavOpen(false);\r\n\r\n  useEffect(() => {\r\n    setActiveTab(propActiveTab);\r\n  }, [propActiveTab]);\r\n\r\n  const handleTabClick = (item) => {\r\n    setActiveTab(item);\r\n    if (onTabClick) {\r\n      onTabClick(item);\r\n    }\r\n  };\r\n\r\n  const handleSignInClick = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBarContainer>\r\n        <DrawerButton onClick={toggleSideNav}>\r\n          <MenuIcon className=\"icon\" />\r\n        </DrawerButton>\r\n        <Logo\r\n          src=\"https://cdn.shopify.com/s/files/1/0689/1443/files/CLOSCA-LOGO-WEB-BLACK_130x@2x.png?v=1559116993\"\r\n          alt=\"Closca Logo\"\r\n        />\r\n        <MenuContainer>\r\n          {menuItems.map((item) => (\r\n            <MenuButton\r\n              key={item}\r\n              onClick={() => handleTabClick(item)}\r\n              active={item === activeTab}\r\n            >\r\n              {item}\r\n            </MenuButton>\r\n          ))}\r\n        </MenuContainer>\r\n        <HeaderIcons>\r\n          <SignInButton onClick={handleSignInClick}>Sign In</SignInButton>\r\n        </HeaderIcons>\r\n      </NavBarContainer>\r\n      <SideBar\r\n        navLinks={[\r\n          { Icon: () => {}, isFooter: false, name: 'Home', path: '/home' },\r\n          { Icon: () => {}, isFooter: false, name: 'About', path: '/about' },\r\n          { Icon: () => {}, isFooter: true, name: 'Settings', path: '/settings' },\r\n          { Icon: () => {}, isFooter: true, name: 'Contact', path: '/contact' },\r\n        ]}\r\n        isSideNavOpen={isSideNavOpen}\r\n        toggleSideNav={toggleSideNav}\r\n        closeSideNav={closeSideNav}\r\n        hideProfile={false}\r\n        onLogout={() => {}}\r\n        profilePic=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg\"\r\n        signInColor=\"#ff4500\"\r\n        username=\"Jane Doe\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nTopNavBar2.propTypes = {\r\n  menuItems: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  activeTab: PropTypes.string,\r\n  onTabClick: PropTypes.func,\r\n};\r\n\r\nTopNavBar2.defaultProps = {\r\n  activeTab: '',\r\n  onTabClick: null,\r\n};\r\n\r\nexport default TopNavBar2;\r\n"],"names":[],"sourceRoot":""}